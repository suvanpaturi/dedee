from azure.iot.device.aio import ModuleClient
from azure.iot.device import MethodResponse
from llm_interact import process_query
import json
import asyncio

async def method_handler(method_request):
    if method_request.name == "process_query":
        print("Processing Query...")
        try:
            payload_json  = json.loads(method_request.payload)
            response = await process_query(payload_json)
            status = 200
            response_payload = {"result": response, "status": "success"}
        except Exception as e:
            status = 400
            response_payload = {"error": e, "status": "failure"}
    else:
        response_payload = {"error": "Unknown method", "status": "failure"}
        status = 404

    method_response = MethodResponse.create_from_method_request(
        method_request, status, response_payload
    )
    await module_client.send_method_response(method_response)

async def setup():
    global module_client
    module_client = ModuleClient.create_from_edge_environment()
    await module_client.connect()
    module_client.on_method_request_received = method_handler
    
    while True:
        await asyncio.sleep(100)

if __name__ == "__main__":
    asyncio.run(setup())